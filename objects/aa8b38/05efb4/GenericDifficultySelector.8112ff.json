{
  "AltLookAngle": {
    "x": 0,
    "y": 0,
    "z": 0
  },
  "Autoraise": true,
  "ColorDiffuse": {
    "b": 1,
    "g": 1,
    "r": 1
  },
  "CustomImage": {
    "CustomTile": {
      "Stackable": false,
      "Stretch": true,
      "Thickness": 0.1,
      "Type": 3
    },
    "ImageScalar": 1,
    "ImageSecondaryURL": "https://i.imgur.com/EcbhVuh.jpg/",
    "ImageURL": "http://cloud-3.steamusercontent.com/ugc/965354846165100486/3DC8FCEF364B30758B09EF96AF9458F2B8E64D56/",
    "WidthScale": 0
  },
  "Description": "click to set chaos token difficulty",
  "DragSelectable": true,
  "GMNotes": "",
  "GUID": "8112ff",
  "Grid": true,
  "GridProjection": false,
  "Hands": false,
  "HideWhenFaceDown": false,
  "IgnoreFoW": false,
  "LayoutGroupSortIndex": 0,
  "Locked": false,
  "LuaScript": "---\r\n--- Generated by EmmyLua(https://github.com/EmmyLua)\r\n--- Created by Whimsical.\r\n--- DateTime: 2021-08-05 6:14 p.m.\r\n---\r\n\r\n\r\nlocal tags = {\r\n    bag = \"chaos_bag\",\r\n    provider = \"token_list_provider\",\r\n    tokens = \"token_image_provider\"\r\n}\r\n\r\n---@class ChaosToken\r\n---@field name string\r\n---@field image string\r\nlocal _ = {}\r\n\r\n---@type table\u003cstring|number, ChaosToken\u003e\r\nlocal sources\r\n\r\n---@type table\u003cstring, any[]\u003e\r\nlocal tokens\r\n\r\n---@param source TTSObject\r\nlocal LoadSource = function (source)\r\n    tokens = source:getTable(\"chaos_tokens\")\r\nend\r\n\r\n---@param token ChaosToken\r\n---@param position Vector\r\n---@param chaos_bag TTSObject\r\n---@return number\r\nlocal SpawnToken = function (token, position, chaos_bag)\r\n    spawnObject {\r\n        type = \"Custom_Tile\",\r\n        position = position,\r\n        scale = { 0.81, 1.0, 0.81 },\r\n        rotation = { 0, 270, 0 },\r\n        ---@param object TTSObject\r\n        callback_function = function(object, _, _)\r\n            object:setName(token.name)\r\n            chaos_bag:putObject(object)\r\n        end\r\n    }:setCustomObject {\r\n        image = token.image,\r\n        type = 2,\r\n        thickness = 0.1\r\n    }\r\nend\r\n\r\n---@param chaos_bag TTSObject\r\nlocal emptyBag= function (chaos_bag)\r\n    local object = chaos_bag:getObjects()\r\n    local pos = self:getPosition()\r\n    pos.y = pos.y+1\r\n\r\n    for _, object in ipairs(object) do\r\n        chaos_bag:takeObject {\r\n            guid = object.guid,\r\n            position = pos,\r\n            ---@param item TTSObject\r\n            callback_function = function (item) item:destruct() end\r\n        }\r\n    end\r\nend\r\n\r\n---@param difficulty string\r\nlocal clickFun= function (difficulty)\r\n    local chaos_bag = getObjectsWithTag(tags.bag)[1]\r\n\r\n    emptyBag(chaos_bag)\r\n\r\n    local loading = tokens[difficulty]\r\n    local pos = self:getPosition()\r\n\r\n    for _, token_id in ipairs(loading) do\r\n        if type(token_id)==\"string\" then token_id = token_id:lower() end\r\n\r\n        local token = sources[token_id]\r\n\r\n        if (token==nil) then\r\n            error(\"Could not find token \\\"\" .. token_id .. \"\\\".\")\r\n            return\r\n        end\r\n\r\n        SpawnToken(token, pos, chaos_bag)\r\n    end\r\nend\r\n\r\n\r\n---@param difficulty string\r\nlocal MakeClickFun = function(difficulty)\r\n    return function ()\r\n        clickFun(difficulty)\r\n    end\r\nend\r\n\r\n---@param label string\r\n---@param z_offset number|nil\r\nlocal makeButton = function(label , z_offset)\r\n    z_offset = z_offset or -0.15\r\n\r\n    _G[label:lower() .. \"Click\"] = MakeClickFun(label)\r\n\r\n    self:createButton({\r\n        label = label,\r\n        function_owner = self,\r\n        click_function = label:lower() .. \"Click\",\r\n        position = {0, 0.1, z_offset},\r\n        rotation = {0, 0, 0},\r\n        scale = {0.47, 1, 0.47},\r\n        height = 200,\r\n        width = 1150,\r\n        font_size = 100,\r\n        color = {0.87, 0.8, 0.70},\r\n        font_color = {0, 0, 0}\r\n    })\r\n    return z_offset + 0.20\r\nend\r\n\r\n---@param source TTSObject\r\nlocal CreateButtons= function(source)\r\n    self:clearButtons()\r\n\r\n    local z_offset\r\n    for difficulty,_ in pairs(tokens) do\r\n        z_offset = makeButton(difficulty, z_offset)\r\n    end\r\nend\r\n\r\n\r\nfunction LoadTokens()\r\n    ---@type TTSObject[]\r\n    local image_sources = getObjectsWithTag(tags.tokens)\r\n\r\n    if (#image_sources\u003c=0) then\r\n        error(\"Cannot find images_sources\")\r\n        return\r\n    end\r\n\r\n    sources = image_sources[1]:getTable(\"sources\")\r\n\r\n    if (tokens~=nil) then CreateButtons() return end\r\n\r\n    local source = getObjectsWithTag(tags.provider)\r\n\r\n    if (#source\u003c=0) then return end\r\n\r\n    LoadSource(source[1])\r\n\r\n    CreateButtons()\r\nend\r\n\r\nfunction onload()\r\n    Timer.create {\r\n        identifier = self:getGUID(),\r\n        function_name = \"LoadTokens\"\r\n    }\r\nend\r\n\r\n---@param provider TTSObject\r\nfunction onObjectSpawn(provider)\r\n    if (not provider:hasTag(tags.provider)) then return end\r\n\r\n    LoadSource(provider)\r\n\r\n    CreateButtons()\r\nend\r",
  "LuaScriptState": "",
  "LuaScript_path": "GenericDifficultySelector.8112ff.ttslua",
  "MeasureMovement": false,
  "Name": "Custom_Tile",
  "Nickname": "Generic Difficulty Selector",
  "Snap": true,
  "Sticky": true,
  "Tooltip": true,
  "Transform": {
    "posX": 12.1737871,
    "posY": 4.2156744,
    "posZ": 29.9137135,
    "rotX": 0.0712406039,
    "rotY": 270.087463,
    "rotZ": 42.47016,
    "scaleX": 2.2,
    "scaleY": 1,
    "scaleZ": 2.2
  },
  "Value": 0,
  "XmlUI": ""
}