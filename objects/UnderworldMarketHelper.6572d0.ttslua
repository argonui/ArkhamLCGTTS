function onload(saved_data)
    generateButtonParams()

    if saved_data != '' then
        local loaded_data = JSON.decode(saved_data)
    end

    createAllButtons()

    cardPositions = {
        Vector(-0.22, 2, 7.2),
        Vector(-0.22, 2, 3.6),
        Vector(-0.22, 2, 0),
        Vector(-0.22, 2, -3.6),
        Vector(-0.22, 2, -7.2),
        Vector(-4.5, 2, 7.2),
        Vector(-4.5, 2, 3.6),
        Vector(-4.5, 2, 0),
        Vector(-4.5, 2, -3.6),
        Vector(-4.5, 2, -7.2)
    }

    debugMode = false

    --todo create new button to reveal the first two cards (unless they are already revealed)
    --todo create help button with explanations maybe
    --todo create button to put first two cards on the back of the line  
end

function doNothing()
    
end

function onCollisionEnter(info)
    if not debugMode then
        return
    end

    local object = getObjectFromGUID(info.collision_object.getGUID())

    if object.tag == 'Card' then
        log(findOffsetDistance(self.getPosition(), object.getPosition(), object))
        log('--------------------') 
    end
end

function createAllButtons()
    -- self.createButton(b_1)
    -- self.createButton(b_2)
    -- self.createButton(b_3)
    -- self.createButton(b_4)
    -- self.createButton(b_5)
    -- self.createButton(b_6)
    -- self.createButton(b_7)
    -- self.createButton(b_8)
    -- self.createButton(b_9)
    -- self.createButton(b_10)

    -- self.createButton(b_placeDeckHereTEMP)

    self.createButton(b_setup)
end

function findOffsetDistance(p1, p2, obj)
    local yOffset = 0
    if obj ~= nil then
        local bounds = obj.getBounds()
        yOffset = (bounds.size.y - bounds.offset.y)
    end
    local deltaPos = {}
    deltaPos.x = (p2.x-p1.x)
    deltaPos.y = (p2.y-p1.y) + yOffset
    deltaPos.z = (p2.z-p1.z)
    return deltaPos
end

function setupHelper()
    castOrigin = self.getPosition() + Vector(4.05, 0, -7.2)

    deckGUID = false;

    local hitList = Physics.cast({
        origin       = castOrigin,
        direction    = {0,1,0},
        size         = {x=1, y=1, z=1},
        type         = 1,
        max_distance = 1
    })

    for _, hit in ipairs(hitList) do
        if hit.hit_object != self and hit.hit_object.tag == "Deck" then
            deckGUID = hit.hit_object.getGUID()
        end
    end

    if (not deckGUID) then
        print('Underworld Market Helper: No deck found.')
        return
    end

    deck = getObjectFromGUID(deckGUID)

    if (deck.getQuantity() ~= 10) then
        print('Underworld Market Helper: Deck must include exactly 10 cards.')
        return
    end

    illicitCount = 0

    for _, card in ipairs(deck.getObjects()) do
        decodedGMNotes = JSON.decode(card.gm_notes)

        if decodedGMNotes ~= nil and string.find(decodedGMNotes.traits, "Illicit", 1, true) then
            illicitCount = illicitCount + 1
        end
    end

    if (illicitCount ~= 10) then
        print('Underworld Market Helper: Deck must include 10 Illicit cards.')
        return
    end

    deck.shuffle()

    Wait.time(function()
        for i, card in ipairs(deck.getObjects()) do
            deck.takeObject({
                rotation = self.getRotation() + Vector(0, 0, 180),
                position = self.getPosition() + cardPositions[i]
            })
        end
    end, 0.5)
end

function generateButtonParams()
    b_setup = {
        click_function = 'setupHelper',
        function_owner = self,
        label = 'Setup',
        position = {1.6,0.05,-1.38},
        width = 275,
        height = 35,
        font_size = 50
    }
    b_1 = {
        index = 0,
        click_function = 'doNothing',
        function_owner = self,
        label = '1',
        position = {-1.6,0.05,0.05},
        font_color = {1,1,1,100},
        width = 0,
        height = 0,
        font_size = 250
    }
    b_2 = {
        index = 0,
        click_function = 'doNothing',
        function_owner = self,
        label = '2',
        position = {-0.8,0.05,0.05},
        font_color = {1,1,1,100},
        width = 0,
        height = 0,
        font_size = 250
    }
    b_3 = {
        index = 0,
        click_function = 'doNothing',
        function_owner = self,
        label = '3',
        position = {0,0.05,0.05},
        font_color = {1,1,1,100},
        width = 0,
        height = 0,
        font_size = 250
    }
    b_4 = {
        index = 0,
        click_function = 'doNothing',
        function_owner = self,
        label = '4',
        position = {0.8,0.05,0.05},
        font_color = {1,1,1,100},
        width = 0,
        height = 0,
        font_size = 250
    }
    b_5 = {
        index = 0,
        click_function = 'doNothing',
        function_owner = self,
        label = '5',
        position = {1.6,0.05,0.05},
        font_color = {1,1,1,100},
        width = 0,
        height = 0,
        font_size = 250
    }
    b_6 = {
        index = 0,
        click_function = 'doNothing',
        function_owner = self,
        label = '6',
        position = {-1.6,0.05,1.0},
        font_color = {1,1,1,100},
        width = 0,
        height = 0,
        font_size = 250
    }
    b_7 = {
        index = 0,
        click_function = 'doNothing',
        function_owner = self,
        label = '7',
        position = {-0.8,0.05,1.0},
        font_color = {1,1,1,100},
        width = 0,
        height = 0,
        font_size = 250
    }
    b_8 = {
        index = 0,
        click_function = 'doNothing',
        function_owner = self,
        label = '8',
        position = {0,0.05,1.0},
        font_color = {1,1,1,100},
        width = 0,
        height = 0,
        font_size = 250
    }
    b_9 = {
        index = 0,
        click_function = 'doNothing',
        function_owner = self,
        label = '9',
        position = {0.8,0.05,1.0},
        font_color = {1,1,1,100},
        width = 0,
        height = 0,
        font_size = 250
    }
    b_10 = {
        index = 0,
        click_function = 'doNothing',
        function_owner = self,
        label = '10',
        position = {1.6,0.05,1.0},
        font_color = {1,1,1,100},
        width = 0,
        height = 0,
        font_size = 250
    }
end