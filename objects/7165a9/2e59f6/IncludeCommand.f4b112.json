{
  "AltLookAngle": {
    "x": 0,
    "y": 0,
    "z": 0
  },
  "Autoraise": true,
  "ColorDiffuse": {
    "b": 1,
    "g": 1,
    "r": 1
  },
  "Description": "Arguments:\ncount\nname\nsubtitle\nimage_uri\nzone [Optional]\nback_image_uri [Optional]",
  "DragSelectable": true,
  "GMNotes": "",
  "GUID": "f4b112",
  "Grid": true,
  "GridProjection": false,
  "Hands": false,
  "HideWhenFaceDown": false,
  "IgnoreFoW": false,
  "LayoutGroupSortIndex": 0,
  "Locked": false,
  "LuaScript": "---\r\n--- Generated by EmmyLua(https://github.com/EmmyLua)\r\n--- Created by Whimsical.\r\n--- DateTime: 2021-08-30 5:05 p.m.\r\n---\r\n\r\ncommand_name = \"include\"\r\n\r\n---@type ArkhamImport_Command_RunDirectives\r\nrunOn = {\r\n    instructions = true,\r\n    handlers = true\r\n}\r\n\r\nlocal back_image_default = \"https://images-ext-2.discordapp.net/external/QY_dmo_UnAHEi1pgWwaRr1-HSB8AtrAv0W74Mh_Z6vg/https/i.imgur.com/EcbhVuh.jpg\"\r\n\r\n---@param parameters ArkhamImport_Command_DescriptionInstructionArguments\r\n---@return ArkhamImport_Command_DescriptionInstructionResults\r\nfunction do_instruction(parameters)\r\n    local args = parameters.arguments\r\n    local arg_count = #args\r\n\r\n    if (arg_count\u003c4 or arg_count\u003e6) then\r\n        return {\r\n            is_successful = false,\r\n            error_message = \"Include Command requires between 4 and 6 arguments. \" .. arg_count .. \" were provided.\"\r\n        }\r\n    end\r\n\r\n    if not parameters.command_state[\"include-command\"] then\r\n        parameters.command_state[\"include-command\"] = {\r\n            has_run = false,\r\n            includes = {},\r\n            index = 1\r\n        }\r\n    end\r\n\r\n    local index = parameters.command_state[\"include-command\"].index\r\n    parameters.command_state[\"include-command\"].index = index + 1\r\n\r\n    parameters.command_state[\"include-command\"].includes[index] = {\r\n        count = args[1],\r\n        name = args[2],\r\n        subtitle = args[3],\r\n        image_uri = args[4],\r\n        zone = args[5] or \"default\",\r\n        back_image_uri = args[6] or back_image_default\r\n    }\r\n\r\n    return { is_successful = true, command_state = parameters.command_state }\r\nend\r\n\r\n---@param parameters ArkhamImport_Command_HandlerArguments\r\n---@return ArkhamImport_Command_HandlerResults\r\nfunction handle_card(parameters)\r\n    local state = parameters.command_state[\"include-command\"]\r\n\r\n    if state.has_run then return { is_successful = true } end\r\n\r\n    state.has_run = true\r\n\r\n    local source = getObjectFromGUID(parameters.source_guid)\r\n    local offset = 0.1\r\n\r\n    for _, include in pairs(state.includes) do\r\n        local zone_name = include.zone\r\n        local zone = parameters.configuration.zones[zone_name]\r\n\r\n        if not zone then\r\n            return {\r\n                is_successful = false,\r\n                command_state = parameters.command_state,\r\n                error_message = \"Include Card [\" .. include.name .. \"]: Zone \\\"\" .. tostring(zone_name) .. \"\\\" was not found.\"\r\n            }\r\n        end\r\n\r\n        local position = zone.is_absolute and zone.position or source:positionToWorld(zone.position)\r\n\r\n        for _=1, include.count do\r\n            local new = spawnObject {\r\n                type = \"CardCustom\",\r\n                position = position + Vector(0, offset, 0),\r\n                rotaiton = source:getRotation() + Vector(0, 0, zone.is_facedown and 180 or 0),\r\n                ---@param card TTSObject\r\n                callback_function = function (card)\r\n                    card:setName(include.name)\r\n                    card:setDescription(include.subtitle)\r\n                end\r\n            }\r\n\r\n            new:setCustomObject {\r\n                type = 0,\r\n                face = include.image_uri,\r\n                back = include.back_image_uri\r\n            }\r\n            offset = offset + 1\r\n        end\r\n    end\r\n\r\n    return {\r\n        handled = false, -- This is adding cards without respect to the deck content. So the card we're using to fire this command still needs proper handling\r\n        command_state = parameters.command_state,\r\n        is_successful = true\r\n    }\r\nend",
  "LuaScriptState": "",
  "LuaScript_path": "IncludeCommand.f4b112.ttslua",
  "MeasureMovement": false,
  "Name": "Checker_white",
  "Nickname": "Include Command",
  "Snap": true,
  "Sticky": true,
  "Tags": [
    "import_command"
  ],
  "Tooltip": true,
  "Transform": {
    "posX": -48.10565,
    "posY": 3.41714334,
    "posZ": -75.43099,
    "rotX": 358.359924,
    "rotY": 0.211258739,
    "rotZ": 178.454788,
    "scaleX": 0.35,
    "scaleY": 0.35,
    "scaleZ": 0.35
  },
  "Value": 0,
  "XmlUI": ""
}